Challenge 2:

Let maxNumber represent the biggest number, set it to zero to start
While there are still numbers left in the list
	Look at the next number in the list
	Compare it to the maxNumber
		If next number is smaller than maxNumber
			Set maxNumber to that number
Report maxNumber as the biggest in the list

Potential errors:
	The above pseudocode would not deliver the correct output if the list contains negative elements because it has been set to zero and not to the lowest possible value.
	The pseudocode needs to check if the list is empty and return null on event of an empty list.
	
	
Corrected pseudocode:

Let maxNumber represent the biggest number, initialize it to the smallest possible value.
If the list is empty, Report NULL.
  While there are still numbers left in the list
    Look at the next number in the list
    Compare it to the maxNumber
        If next number is bigger than maxNumber
            Set maxNumber to that number
Report maxNumber as the biggest in the list 

Explanation:

Step 1: initialize the variable maxNumber to the smallest value in the list. 
Step 2: Check if the list is empty and return null.
Step 3: If the list contains elements, loop it until the last element (1000)
Step 4: Inside the loop , do a comparison . The first number in the loop is maxNumber whilst the second number is nextNumber.
Step 5: if nextNumber>maxNumber , then store the value in maxNumber variable.
Step 6: The condition will loop until there are no more elements in the list.
Step 7: Once the loop condition is false (i.e) all the 1000 elements are compared , the maxNumber will return the biggest value in the list.


	
